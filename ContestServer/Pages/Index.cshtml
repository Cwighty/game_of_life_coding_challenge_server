@page
@model ContestServer.IndexModel
<head>
    <!-- auto-refresh until better dashboard -->
    <meta http-equiv="refresh" content="5" />
</head>

<h1>2020 Snow College Engineering Week Coding Challenge</h1>
<h2>Conway's Game of Life</h2>

@if (Model.Contestants.Any())
{
<h3>Current Contestants (@Model.Contestants.Count()):</h3>
<ul>
    @foreach (var contestant in Model.Contestants)
    {
        <li>@contestant.Name (last seen at @contestant.LastSeen.ToShortTimeString())</li>
    }
</ul>
}
else
{
    <h3>No one has registered yet.</h3>
}

<div>
    <h3>Instructions</h3>
    <ul>
        <li><p>Go to /register and send {"name": "your name"} in the body. You will receive back a token that needs to be included in all future messages.</p></li>
        <li>Post to /update with an UpdateRequest in the following format:<br/>
            <pre>
  {"token": "{guid value}", "clientStatus": "waiting"}
            </pre>
        <p>You will get a response back with a gameState ("NotStarted"), generationsToCompute (nullable int), seedBoard (list of Coordinates), issError (bool), errorMessage (string)</p>
        </li>
        <li>Browse to <a href="/startGame">/startGame</a> to start the game</li>
        <li>
            Once the game has begun the gameState will become "InProgress", seedBoard will have the initial list of live cells, and generationsToCompute will have a value.
        </li>
    </ul>
</div>

@{
}
